{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOt60WmEJ04911ks9wYSR4i",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Phg0122/gdsc/blob/main/11-02\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qoNbGBwXP214",
        "outputId": "1fb2deb7-b5bf-4beb-d713-dbfc45fb3dd7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 2\n",
            "<\n"
          ]
        }
      ],
      "source": [
        "a,b =map(int, input().split())\n",
        "\n",
        "if a>b:\n",
        "    print('>')\n",
        "elif a==b:\n",
        "    print('==')\n",
        "else:\n",
        "    print('<')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input())\n",
        "if a>=90:\n",
        "  print('A')\n",
        "elif a>= 80:\n",
        "  print('B')\n",
        "elif a>=70:\n",
        "  print('C')\n",
        "elif a>=60:\n",
        "  print('D')\n",
        "else:\n",
        "  print('F')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u3hhsqNQQAFq",
        "outputId": "b1ccf917-2a4a-44b6-c319-ea878dac65c8"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " 43\n",
            "F\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a=int(input())\n",
        "if a%400==0:\n",
        "    print('1')\n",
        "elif a%100==0:\n",
        "    print('0')\n",
        "elif a%4==0:\n",
        "    print('1')\n",
        "else:\n",
        "    print('0')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1GVzTqnSQ_ei",
        "outputId": "28eb623d-6387-4a45-d628-bbda797eb378"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3423\n",
            "0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = int(input())\n",
        "y = int(input())\n",
        "if x>0 and y>0:\n",
        "  print('1')\n",
        "elif x<0 and y>0:\n",
        "  print('2')\n",
        "elif x<0 and y<0:\n",
        "  print('3')\n",
        "else:\n",
        "  print('4')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UdIbvjlERDuH",
        "outputId": "e68b28c3-5613-44fc-c87b-1a58bf849afb"
      },
      "execution_count": 5,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "2\n",
            "3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a,b =map(int, input().split())\n",
        "b = b-45\n",
        "if b>=0:\n",
        "  print(a,b)\n",
        "else:\n",
        "  b = 60+b\n",
        "  a= a-1\n",
        "  if a>=0:\n",
        "    print(a,b)\n",
        "  else:\n",
        "     a=24+a\n",
        "     print(a,b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pZfle_imRa5g",
        "outputId": "45ce51ed-3bac-481b-db45-98e1809bf134"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0 0\n",
            "23 15\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a,b =map(int, input().split())\n",
        "c = int(input())\n",
        "b = b+c\n",
        "if b<60:\n",
        "  print(a,b)\n",
        "else:\n",
        "  while b >=60:  \n",
        "    a= a+1\n",
        "    b= b-60\n",
        "  if a<24:\n",
        "     print(a,b)\n",
        "  else:\n",
        "     a= a-24\n",
        "     print(a,b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KP8pQUxUSh0D",
        "outputId": "f27f296b-f00e-463b-cbf2-d020e6c10479"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "17 40\n",
            "80\n",
            "19 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a,b,c =map(int, input().split())\n",
        "if a==b and b==c:\n",
        "  print(10000+a*1000)\n",
        "elif a==b or c==a:\n",
        "  print(1000+a*100)\n",
        "elif b==c:\n",
        "  print(1000+c*100)\n",
        "elif a!=b and b!=c and c!=a:\n",
        "  if a>b and a>c:\n",
        "      print(a*100)\n",
        "  if b>a and b>c:\n",
        "       print(b*100)\n",
        "  if c>a and c>b:\n",
        "       print(c*100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0sPSK_cOUmEI",
        "outputId": "ed5e09a3-e19c-484c-bb14-c251db1097da"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3 3 6\n",
            "1300\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input())\n",
        "for i in range(1,10):\n",
        "  print(a, '*', i, '=', a*i )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7GEaQnKbXzrq",
        "outputId": "47aaf260-ced4-4ff0-c3d8-c1bf75e07cf7"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "2 * 1 = 2\n",
            "2 * 2 = 4\n",
            "2 * 3 = 6\n",
            "2 * 4 = 8\n",
            "2 * 5 = 10\n",
            "2 * 6 = 12\n",
            "2 * 7 = 14\n",
            "2 * 8 = 16\n",
            "2 * 9 = 18\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "c = int(input())\n",
        "for i in range(1,c+1):\n",
        "  a,b =map(int, input().split())\n",
        "  print(a+b)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zBpi9001YEuN",
        "outputId": "f728182a-7069-4959-bbc8-624d1388eb2b"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n",
            "1 1\n",
            "2\n",
            "2 3\n",
            "5\n",
            "3 4\n",
            "7\n",
            "9 8\n",
            "17\n",
            "5 2\n",
            "7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input())\n",
        "a = 0\n",
        "for i in range(1, n+1):\n",
        "  a = a + i\n",
        "print(a)  "
      ],
      "metadata": {
        "id": "wIJMod7kY2cU"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}